{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // Lifted from https://github.com/ReactiveX/rxjs/blob/5.3.0/src/symbol/observable.ts\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\n\nfunction getSymbolObservable(context) {\n  var $$observable;\n  var Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n      $$observable = Symbol('observable');\n      Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(typeof window === 'undefined' ? {} : window);","map":{"version":3,"sources":["../../../src/symbol/observable.ts"],"names":[],"mappings":";;;;IAMA;;AACA;;AACA,SAAgB,mBAAhB,CAAoC,OAApC,EAAgD;AAC9C,MAAI,YAAJ;AACA,MAAI,MAAM,GAAG,OAAO,CAAC,MAArB;;AAEA,MAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,QAAI,MAAM,CAAC,UAAX,EAAuB;AACrB,MAAA,YAAY,GAAG,MAAM,CAAC,UAAtB;AACD,KAFD,MAEO;AACL,MAAA,YAAY,GAAG,MAAM,CAAC,YAAD,CAArB;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,YAApB;AACD;AACF,GAPD,MAOO;AACL,IAAA,YAAY,GAAG,cAAf;AACD;;AAED,SAAO,YAAP;AACD;;AAhBD,OAAA,CAAA,mBAAA,GAAA,mBAAA;AAkBa,OAAA,CAAA,UAAA,GAAa,mBAAmB,CAAC,OAAO,MAAP,KAAkB,WAAlB,GAAgC,EAAhC,GAAqC,MAAtC,CAAhC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Lifted from https://github.com/ReactiveX/rxjs/blob/5.3.0/src/symbol/observable.ts\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(typeof window === 'undefined' ? {} : window);\n//# sourceMappingURL=observable.js.map"]},"metadata":{},"sourceType":"script"}