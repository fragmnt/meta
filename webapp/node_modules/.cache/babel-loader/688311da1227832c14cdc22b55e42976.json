{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar noop_1 = require(\"./noop\");\n/* tslint:enable:max-line-length */\n\n\nfunction pipe() {\n  var fns = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    fns[_i] = arguments[_i];\n  }\n\n  return pipeFromArray(fns);\n}\n\nexports.pipe = pipe;\n/** @internal */\n\nfunction pipeFromArray(fns) {\n  if (!fns) {\n    return noop_1.noop;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input) {\n    return fns.reduce(function (prev, fn) {\n      return fn(prev);\n    }, input);\n  };\n}\n\nexports.pipeFromArray = pipeFromArray;","map":{"version":3,"sources":["../../../src/util/pipe.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAiEA;;;AAEA,SAAgB,IAAhB,GAAoB;AAClB,MAAA,GAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAkC;AAAlC,IAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAEA,SAAO,aAAa,CAAC,GAAD,CAApB;AACD;;AAJD,OAAA,CAAA,IAAA,GAAA,IAAA;AAMA;;AACA,SAAgB,aAAhB,CACE,GADF,EACiC;AAE/B,MAAI,CAAC,GAAL,EAAU;AACR,WAAO,MAAA,CAAA,IAAP;AACD;;AAED,MAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB;AACpB,WAAO,GAAG,CAAC,CAAD,CAAV;AACD;;AAED,SAAO,SAAS,KAAT,CAAe,KAAf,EAAuB;AAC5B,WAAO,GAAG,CAAC,MAAJ,CACL,UAAC,IAAD,EAAY,EAAZ,EAAmC;AAAK,aAAA,EAAE,CAAF,IAAE,CAAF;AAAQ,KAD3C,EAEL,KAFK,CAAP;AAID,GALD;AAMD;;AAjBD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar noop_1 = require(\"./noop\");\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexports.pipe = pipe;\n/** @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nexports.pipeFromArray = pipeFromArray;\n//# sourceMappingURL=pipe.js.map"]},"metadata":{},"sourceType":"script"}