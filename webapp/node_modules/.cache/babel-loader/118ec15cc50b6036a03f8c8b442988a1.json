{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Observer_1 = require(\"./Observer\");\n\nvar Subscription_1 = require(\"./Subscription\");\n\nvar rxSubscriber_1 = require(\"./symbol/rxSubscriber\");\n\nvar hostReportError_1 = require(\"./util/hostReportError\");\n\nvar isFunction_1 = require(\"./util/isFunction\");\n\nvar Subscriber =\n/** @class */\nfunction (_super) {\n  __extends(Subscriber, _super);\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n\n\n  function Subscriber(destinationOrNext, error, complete) {\n    var _this = _super.call(this) || this;\n    /** @internal */\n\n\n    _this.syncErrorValue = null;\n    /** @internal */\n\n    _this.syncErrorThrown = false;\n    /** @internal */\n\n    _this.syncErrorThrowable = false;\n    _this.isStopped = false;\n    _this._parentSubscription = null;\n\n    switch (arguments.length) {\n      case 0:\n        _this.destination = Observer_1.empty;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          _this.destination = Observer_1.empty;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n          // node_modules, we cannot rely on `instanceof` checks\n          if (isTrustedSubscriber(destinationOrNext)) {\n            var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n            _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            _this.destination = trustedSubscriber;\n            trustedSubscriber.add(_this);\n          } else {\n            _this.syncErrorThrowable = true;\n            _this.destination = new SafeSubscriber(_this, destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        _this.syncErrorThrowable = true;\n        _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n        break;\n    }\n\n    return _this;\n  }\n\n  Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () {\n    return this;\n  };\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.next = function (value) {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  };\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._error(err);\n    }\n  };\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._complete();\n    }\n  };\n\n  Subscriber.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n\n    this.isStopped = true;\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  Subscriber.prototype._next = function (value) {\n    this.destination.next(value);\n  };\n\n  Subscriber.prototype._error = function (err) {\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n\n  Subscriber.prototype._complete = function () {\n    this.destination.complete();\n    this.unsubscribe();\n  };\n  /** @deprecated This is an internal implementation detail, do not use. */\n\n\n  Subscriber.prototype._addParentTeardownLogic = function (parentTeardownLogic) {\n    if (parentTeardownLogic !== this) {\n      this._parentSubscription = this.add(parentTeardownLogic);\n    }\n  };\n  /** @deprecated This is an internal implementation detail, do not use. */\n\n\n  Subscriber.prototype._unsubscribeParentSubscription = function () {\n    if (this._parentSubscription !== null) {\n      this._parentSubscription.unsubscribe();\n    }\n  };\n  /** @deprecated This is an internal implementation detail, do not use. */\n\n\n  Subscriber.prototype._unsubscribeAndRecycle = function () {\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents;\n\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  };\n\n  return Subscriber;\n}(Subscription_1.Subscription);\n\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar SafeSubscriber =\n/** @class */\nfunction (_super) {\n  __extends(SafeSubscriber, _super);\n\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    var _this = _super.call(this) || this;\n\n    _this._parentSubscriber = _parentSubscriber;\n    var next;\n    var context = _this;\n\n    if (isFunction_1.isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== Observer_1.empty) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction_1.isFunction(context.unsubscribe)) {\n          _this.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = _this.unsubscribe.bind(_this);\n      }\n    }\n\n    _this._context = context; // @ts-ignore\n\n    _this._next = next;\n    _this._error = error;\n    _this._complete = complete;\n    return _this;\n  }\n\n  SafeSubscriber.prototype.next = function (value) {\n    if (!this.isStopped && this._next) {\n      this.__tryOrUnsub(this._next, value);\n    }\n  };\n\n  SafeSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (this._error) {\n        this.__tryOrUnsub(this._error, err);\n\n        this.unsubscribe();\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        hostReportError_1.hostReportError(err);\n      } else {\n        hostReportError_1.hostReportError(err);\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.complete = function () {\n    var _this = this;\n\n    if (!this.isStopped) {\n      if (this._complete) {\n        var wrappedComplete = function () {\n          return _this._complete.call(_this._context);\n        };\n\n        this.__tryOrUnsub(wrappedComplete);\n      }\n\n      this.unsubscribe();\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      hostReportError_1.hostReportError(err);\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n    throw new Error('bad call');\n  };\n  /** @deprecated This is an internal implementation detail, do not use. */\n\n\n  SafeSubscriber.prototype._unsubscribe = function () {\n    var _parentSubscriber = this._parentSubscriber;\n    this._context = null;\n    this._parentSubscriber = null;\n\n    _parentSubscriber.unsubscribe();\n  };\n\n  return SafeSubscriber;\n}(Subscriber);\n\nfunction isTrustedSubscriber(obj) {\n  return obj instanceof Subscriber || 'syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber];\n}","map":{"version":3,"sources":["../../src/Subscriber.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Observer_1 = require(\"./Observer\");\nvar Subscription_1 = require(\"./Subscription\");\nvar rxSubscriber_1 = require(\"./symbol/rxSubscriber\");\nvar hostReportError_1 = require(\"./util/hostReportError\");\nvar isFunction_1 = require(\"./util/isFunction\");\nvar Subscriber = /** @class */ (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        /** @internal */ _this.syncErrorValue = null;\n        /** @internal */ _this.syncErrorThrown = false;\n        /** @internal */ _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        _this._parentSubscription = null;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n                    // node_modules, we cannot rely on `instanceof` checks\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return this;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached `Error`. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subscriber.prototype._addParentTeardownLogic = function (parentTeardownLogic) {\n        if (parentTeardownLogic !== this) {\n            this._parentSubscription = this.add(parentTeardownLogic);\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subscriber.prototype._unsubscribeParentSubscription = function () {\n        if (this._parentSubscription !== null) {\n            this._parentSubscription.unsubscribe();\n        }\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /** @class */ (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        // @ts-ignore\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            this.__tryOrUnsub(this._next, value);\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                this.__tryOrUnsub(this._error, err);\n                this.unsubscribe();\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                hostReportError_1.hostReportError(err);\n            }\n            else {\n                hostReportError_1.hostReportError(err);\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                this.__tryOrUnsub(wrappedComplete);\n            }\n            this.unsubscribe();\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            hostReportError_1.hostReportError(err);\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        throw new Error('bad call');\n    };\n    /** @deprecated This is an internal implementation detail, do not use. */\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return (obj instanceof Subscriber ||\n        ('syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber]));\n}\n//# sourceMappingURL=Subscriber.js.map"]},"metadata":{},"sourceType":"script"}