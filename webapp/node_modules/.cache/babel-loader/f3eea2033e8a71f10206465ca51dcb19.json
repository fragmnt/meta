{"ast":null,"code":"/**\n * TODO: Avoid diffing by passing individual values into a React component\n * rather than the whole `store`, and letting React and `shouldComponentUpdate`\n * handle diffing for us.\n */\nexport function equals(a, b) {\n  if (isImmutable(a) && isImmutable(b)) {\n    return a.equals(b);\n  }\n\n  return a === b;\n}\nexport function isImmutable(a) {\n  return !!a && typeof a === 'object' && ('@@__IMMUTABLE_ITERABLE__@@' in a || '@@__IMMUTABLE_RECORD__@@' in a);\n}\nexport function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n} // Strict Object.keys\n\nexport function keys(o) {\n  return Object.keys(o);\n}\nexport function mapValues(o, f) {\n  let result = {};\n  keys(o).forEach(k => result[k] = f(o[k], k) // TODO: Improve this\n  );\n  return result;\n}\nexport function some(o, f) {\n  return keys(o).some(k => f(o[k], k));\n}","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"AAIA;;;;;AAKA,OAAM,SAAU,MAAV,CAAoB,CAApB,EAA0B,CAA1B,EAA8B;AAClC,MAAI,WAAW,CAAC,CAAD,CAAX,IAAkB,WAAW,CAAC,CAAD,CAAjC,EAAsC;AACpC,WAAO,CAAC,CAAC,MAAF,CAAS,CAAT,CAAP;AACD;;AACD,SAAO,CAAC,KAAK,CAAb;AACD;AAMD,OAAM,SAAU,WAAV,CAAsB,CAAtB,EAA4B;AAChC,SACE,CAAC,CAAC,CAAF,IACA,OAAO,CAAP,KAAa,QADb,KAEC,gCAAgC,CAAhC,IAAqC,8BAA8B,CAFpE,CADF;AAKD;AAED,OAAM,SAAU,cAAV,CAA4B,SAA5B,EAAuD;AAC3D,SAAO,SAAS,CAAC,WAAV,IAAyB,SAAS,CAAC,IAAnC,IAA2C,WAAlD;AACD,C,CAED;;AACA,OAAM,SAAU,IAAV,CAAiC,CAAjC,EAAqC;AACzC,SAAO,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAP;AACD;AAED,OAAM,SAAU,SAAV,CACJ,CADI,EAEJ,CAFI,EAEyB;AAE7B,MAAI,MAAM,GAA0B,EAApC;AACA,EAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ,OAAR,CACE,CAAC,IAAK,MAAM,CAAC,CAAD,CAAN,GAAY,CAAC,CAAC,CAAC,CAAC,CAAD,CAAF,EAAc,CAAd,CADrB,CAC8C;AAD9C;AAGA,SAAO,MAAP;AACD;AAED,OAAM,SAAU,IAAV,CACJ,CADI,EAEJ,CAFI,EAE4C;AAEhD,SAAO,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAR,CAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAP,CAAnB,CAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * TODO: Avoid diffing by passing individual values into a React component\n * rather than the whole `store`, and letting React and `shouldComponentUpdate`\n * handle diffing for us.\n */\nexport function equals(a, b) {\n    if (isImmutable(a) && isImmutable(b)) {\n        return a.equals(b);\n    }\n    return a === b;\n}\nexport function isImmutable(a) {\n    return (!!a &&\n        typeof a === 'object' &&\n        ('@@__IMMUTABLE_ITERABLE__@@' in a || '@@__IMMUTABLE_RECORD__@@' in a));\n}\nexport function getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// Strict Object.keys\nexport function keys(o) {\n    return Object.keys(o);\n}\nexport function mapValues(o, f) {\n    let result = {};\n    keys(o).forEach(k => (result[k] = f(o[k], k)) // TODO: Improve this\n    );\n    return result;\n}\nexport function some(o, f) {\n    return keys(o).some(k => f(o[k], k));\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}