{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport var loginUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pEmail, pPassword) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(process.env.apiUrl);\n            _context.next = 3;\n            return axios.post(\"\".concat(process.env.apiUrl, \"/v1/users/login\"), {\n              email: pEmail,\n              password: pPassword\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              json: true\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var registerUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pEmail, pNickname, pUsername, pPassword) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.post(\"\".concat(process.env.apiUrl, \"/v1/users/register\"), {\n              email: pEmail,\n              password: pPassword,\n              username: pUsername,\n              nickname: pNickname\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              json: true\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerUser(_x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAllUsersFromMarqeta = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"\".concat(process.env.apiUrl, \"/v1/mrq/users\"), {}, {\n              headers: {\n                'x-access-token': localStorage.getItem('token') ? localStorage.getItem('token') : null,\n                'Content-Type': 'application/json'\n              },\n              json: true\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getAllUsersFromMarqeta() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/localuser/.devpost/spring_payments_marqeta/webapp/services/api.js"],"names":["axios","loginUser","pEmail","pPassword","console","log","process","env","apiUrl","post","email","password","headers","json","response","registerUser","pNickname","pUsername","username","nickname","getAllUsersFromMarqeta","get","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,SAAS;AAAA,sEAAG,iBAAOC,MAAP,EAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,MAAxB;AADqB;AAAA,mBAEER,KAAK,CAACS,IAAN,WAAcH,OAAO,CAACC,GAAR,CAAYC,MAA1B,sBAAmD;AACtEE,cAAAA,KAAK,EAAER,MAD+D;AAEtES,cAAAA,QAAQ,EAAER;AAF4D,aAAnD,EAIvB;AACIS,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eADb;AAIIC,cAAAA,IAAI,EAAE;AAJV,aAJuB,CAFF;;AAAA;AAEfC,YAAAA,QAFe;AAAA,6CAadA,QAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATb,SAAS;AAAA;AAAA;AAAA,GAAf;AAgBP,OAAO,IAAMc,YAAY;AAAA,uEAAG,kBAAOb,MAAP,EAAec,SAAf,EAA0BC,SAA1B,EAAqCd,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDH,KAAK,CAACS,IAAN,WAAcH,OAAO,CAACC,GAAR,CAAYC,MAA1B,yBAAsD;AACzEE,cAAAA,KAAK,EAAER,MADkE;AAEzES,cAAAA,QAAQ,EAAER,SAF+D;AAGzEe,cAAAA,QAAQ,EAAED,SAH+D;AAIzEE,cAAAA,QAAQ,EAAEH;AAJ+D,aAAtD,EAKpB;AACCJ,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eADV;AAICC,cAAAA,IAAI,EAAE;AAJP,aALoB,CADC;;AAAA;AAClBC,YAAAA,QADkB;AAAA,8CAYjBA,QAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB;AAeP,OAAO,IAAMK,sBAAsB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXpB,KAAK,CAACqB,GAAN,WAAaf,OAAO,CAACC,GAAR,CAAYC,MAAzB,oBAAgD,EAAhD,EAAoD;AACvEI,cAAAA,OAAO,EAAE;AACL,kCAAkBU,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhC,GAAgE,IAD7E;AAEL,gCAAgB;AAFX,eAD8D;AAKvEV,cAAAA,IAAI,EAAE;AALiE,aAApD,CADW;;AAAA;AAC5BC,YAAAA,QAD4B;AAAA,8CAS3BA,QAT2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBM,sBAAsB;AAAA;AAAA;AAAA,GAA5B","sourcesContent":["import axios from 'axios';\n\nexport const loginUser = async (pEmail, pPassword) => {\n    console.log(process.env.apiUrl)\n    const response = await axios.post(`${process.env.apiUrl}/v1/users/login`, {\n        email: pEmail,\n        password: pPassword\n    }, \n    {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n};\n\nexport const registerUser = async (pEmail, pNickname, pUsername, pPassword) => {\n    const response = await axios.post(`${process.env.apiUrl}/v1/users/register`, {\n        email: pEmail,\n        password: pPassword,\n        username: pUsername,\n        nickname: pNickname,\n    }, {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        json: true\n    });\n    return response;\n};\n\nexport const getAllUsersFromMarqeta = async () => {\n    const response = await axios.get(`${process.env.apiUrl}/v1/mrq/users`, {}, {\n        headers: {\n            'x-access-token': localStorage.getItem('token') ? localStorage.getItem('token') : null,\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n}"]},"metadata":{},"sourceType":"module"}