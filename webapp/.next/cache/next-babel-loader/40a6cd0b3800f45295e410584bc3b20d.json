{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar BASE_API_URL = 'http://127.0.0.1:9080';\nexport var loginUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pEmail, pPassword) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(\"\".concat(BASE_API_URL, \"/v1/users/login\"), {\n              email: pEmail,\n              password: pPassword\n            }, {\n              headers: {\n                // 'x-access-token': '',\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              json: true\n            }).then(function (resp) {\n              if (resp.status === 400) {\n                console.log(\"invalid request\", resp.data.msg);\n                return resp;\n              }\n\n              ;\n\n              if (resp.status === 500) {\n                console.log(resp.status, resp);\n                return resp;\n              }\n\n              ;\n              console.log(resp.data);\n              return resp;\n            })[\"catch\"](function (err) {\n              console.log(err);\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var registerUser = function registerUser(email, name, username, password) {};","map":{"version":3,"sources":["/home/localuser/.devpost/spring_payments_marqeta/webapp/services/api.js"],"names":["axios","BASE_API_URL","loginUser","pEmail","pPassword","post","email","password","headers","json","then","resp","status","console","log","data","msg","err","registerUser","name","username"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,YAAY,GAAG,uBAAnB;AAEA,OAAO,IAAMC,SAAS;AAAA,sEAAG,iBAAOC,MAAP,EAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfJ,KAAK,CAACK,IAAN,WAAcJ,YAAd,sBAA6C;AAC/CK,cAAAA,KAAK,EAAEH,MADwC;AAE/CI,cAAAA,QAAQ,EAAEH;AAFqC,aAA7C,EAIN;AACII,cAAAA,OAAO,EAAE;AACN;AACC,gCAAgB;AAFX,eADb;AAKIC,cAAAA,IAAI,EAAE;AALV,aAJM,EAUHC,IAVG,CAUE,UAACC,IAAD,EAAU;AACd,kBAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AAACC,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,IAAI,CAACI,IAAL,CAAUC,GAAzC;AAA8C,uBAAOL,IAAP;AAAa;;AAAA;;AACrF,kBAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AAACC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,MAAjB,EAAyBD,IAAzB;AAAgC,uBAAOA,IAAP;AAAa;;AAAA;AACvEE,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACA,qBAAOJ,IAAP;AACH,aAfK,WAeG,UAACM,GAAD,EAAS;AACdJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,aAjBK,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATf,SAAS;AAAA;AAAA;AAAA,GAAf;AA0BP,OAAO,IAAMgB,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD,EAAQa,IAAR,EAAcC,QAAd,EAAwBb,QAAxB,EAAqC,CAEhE,CAFM","sourcesContent":["import axios from 'axios';\n\nlet BASE_API_URL = 'http://127.0.0.1:9080'\n\nexport const loginUser = async (pEmail, pPassword) => {\n    await axios.post(`${BASE_API_URL}/v1/users/login`, {\n        email: pEmail,\n        password: pPassword\n    }, \n    {\n        headers: {\n           // 'x-access-token': '',\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        json: true\n    }).then((resp) => {\n        if (resp.status === 400) {console.log(\"invalid request\", resp.data.msg);return resp;};\n        if (resp.status === 500) {console.log(resp.status, resp); return resp;};\n        console.log(resp.data);\n        return resp;\n    }).catch((err) => {\n        console.log(err);\n    });\n\n    // response.catch((err)=> {return err;})\n\n   // const response = , return response;\n};\n\n\nexport const registerUser = (email, name, username, password) => {\n\n};"]},"metadata":{},"sourceType":"module"}