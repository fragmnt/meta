{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = process.env.apiUrl;\nexport const loginUser = async (pEmail, pPassword) => {\n  const response = await axios.post('/v1/users/login', {\n    email: pEmail,\n    password: pPassword\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    json: true\n  });\n  return response;\n};\nexport const registerUser = async (pEmail, pNickname, pUsername, pPassword) => {\n  const response = await axios.post('/v1/users/register', {\n    email: pEmail,\n    password: pPassword,\n    username: pUsername,\n    nickname: pNickname\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    json: true\n  }).catch(err => {\n    if (err.status == 409) {\n      console.log('already exists');\n    }\n  });\n  return response;\n};\nexport const getAllUsersFromMarqeta = async () => {\n  const response = await axios.get(`${api}/v1/mrq/users`, {}, {\n    headers: {\n      'x-access-token': localStorage.getItem('token') ? localStorage.getItem('token') : null,\n      'Content-Type': 'application/json'\n    },\n    json: true\n  });\n  return response;\n};","map":{"version":3,"sources":["/home/localuser/.devpost/spring_payments_marqeta/webapp/services/api.js"],"names":["axios","defaults","baseURL","process","env","apiUrl","loginUser","pEmail","pPassword","response","post","email","password","headers","json","registerUser","pNickname","pUsername","username","nickname","catch","err","status","console","log","getAllUsersFromMarqeta","get","api","localStorage","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,MAArC;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,MAAP,EAAeC,SAAf,KAA6B;AAC9C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,iBAAX,EAA8B;AACjDC,IAAAA,KAAK,EAAEJ,MAD0C;AAEjDK,IAAAA,QAAQ,EAAEJ;AAFuC,GAA9B,EAIvB;AACIK,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADb;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAJuB,CAAvB;AAWA,SAAOL,QAAP;AACP,CAbM;AAeP,OAAO,MAAMM,YAAY,GAAG,OAAOR,MAAP,EAAeS,SAAf,EAA0BC,SAA1B,EAAqCT,SAArC,KAAmD;AAC3E,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,oBAAX,EAAiC;AACpDC,IAAAA,KAAK,EAAEJ,MAD6C;AAEpDK,IAAAA,QAAQ,EAAEJ,SAF0C;AAGpDU,IAAAA,QAAQ,EAAED,SAH0C;AAIpDE,IAAAA,QAAQ,EAAEH;AAJ0C,GAAjC,EAKpB;AACCH,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADV;AAICC,IAAAA,IAAI,EAAE;AAJP,GALoB,EAUpBM,KAVoB,CAUbC,GAAD,IAAS;AAEd,QAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,GAfsB,CAAvB;AAkBA,SAAOf,QAAP;AACH,CApBM;AAsBP,OAAO,MAAMgB,sBAAsB,GAAG,YAAY;AAC9C,QAAMhB,QAAQ,GAAG,MAAMT,KAAK,CAAC0B,GAAN,CAAW,GAAEC,GAAI,eAAjB,EAAiC,EAAjC,EAAqC;AACxDd,IAAAA,OAAO,EAAE;AACL,wBAAkBe,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhC,GAAgE,IAD7E;AAEL,sBAAgB;AAFX,KAD+C;AAKxDf,IAAAA,IAAI,EAAE;AALkD,GAArC,CAAvB;AAQA,SAAOL,QAAP;AACH,CAVM","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = process.env.apiUrl;\n\nexport const loginUser = async (pEmail, pPassword) => {\n        const response = await axios.post('/v1/users/login', {\n            email: pEmail,\n            password: pPassword\n        }, \n        {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            json: true\n        });\n\n        return response;\n};\n\nexport const registerUser = async (pEmail, pNickname, pUsername, pPassword) => {\n    const response = await axios.post('/v1/users/register', {\n        email: pEmail,\n        password: pPassword,\n        username: pUsername,\n        nickname: pNickname,\n    }, { \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        json: true\n    }).catch((err) => {\n        \n        if (err.status == 409) {\n            console.log('already exists')\n        }\n    });\n\n\n    return response;\n};\n\nexport const getAllUsersFromMarqeta = async () => {\n    const response = await axios.get(`${api}/v1/mrq/users`, {}, {\n        headers: {\n            'x-access-token': localStorage.getItem('token') ? localStorage.getItem('token') : null,\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n}"]},"metadata":{},"sourceType":"module"}