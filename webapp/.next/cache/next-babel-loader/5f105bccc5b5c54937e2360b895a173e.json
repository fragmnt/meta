{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar api = process.env.BASE_API_URL;\nexport var loginUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pEmail, pPassword) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post(\"\".concat(api, \"/v1/users/login\"), {\n              email: pEmail,\n              password: pPassword\n            }, {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              json: true\n            });\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var registerUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pEmail, pNickname, pUsername, pPassword) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.post(\"\".concat(api, \"/v1/users/register\"), {\n              email: pEmail,\n              password: pPassword,\n              username: pUsername,\n              nickname: pNickname\n            }, {\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              json: true\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function registerUser(_x3, _x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAllUsersFromMarqeta = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"\".concat(process.env.apiUrl, \"/v1/mrq/users\"), {}, {\n              headers: {\n                'x-access-token': localStorage.getItem('token') ? localStorage.getItem('token') : null,\n                'Content-Type': 'application/json'\n              },\n              json: true\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getAllUsersFromMarqeta() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/localuser/.devpost/spring_payments_marqeta/webapp/services/api.js"],"names":["axios","api","process","env","BASE_API_URL","loginUser","pEmail","pPassword","post","email","password","headers","json","response","console","log","registerUser","pNickname","pUsername","username","nickname","getAllUsersFromMarqeta","get","apiUrl","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAtB;AAEA,OAAO,IAAMC,SAAS;AAAA,sEAAG,iBAAOC,MAAP,EAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEP,KAAK,CAACQ,IAAN,WAAcP,GAAd,sBAAoC;AACvDQ,cAAAA,KAAK,EAAEH,MADgD;AAEvDI,cAAAA,QAAQ,EAAEH;AAF6C,aAApC,EAIvB;AACII,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eADb;AAIIC,cAAAA,IAAI,EAAE;AAJV,aAJuB,CAFF;;AAAA;AAEfC,YAAAA,QAFe;AAAA,6CAadA,QAbc;;AAAA;AAAA;AAAA;AAgBrBC,YAAAA,OAAO,CAACC,GAAR;;AAhBqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATV,SAAS;AAAA;AAAA;AAAA,GAAf;AAoBP,OAAO,IAAMW,YAAY;AAAA,uEAAG,kBAAOV,MAAP,EAAeW,SAAf,EAA0BC,SAA1B,EAAqCX,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDP,KAAK,CAACQ,IAAN,WAAcP,GAAd,yBAAuC;AAC1DQ,cAAAA,KAAK,EAAEH,MADmD;AAE1DI,cAAAA,QAAQ,EAAEH,SAFgD;AAG1DY,cAAAA,QAAQ,EAAED,SAHgD;AAI1DE,cAAAA,QAAQ,EAAEH;AAJgD,aAAvC,EAKpB;AACCN,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eADV;AAICC,cAAAA,IAAI,EAAE;AAJP,aALoB,CADC;;AAAA;AAClBC,YAAAA,QADkB;AAAA,8CAajBA,QAbiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZG,YAAY;AAAA;AAAA;AAAA,GAAlB;AAiBP,OAAO,IAAMK,sBAAsB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXrB,KAAK,CAACsB,GAAN,WAAapB,OAAO,CAACC,GAAR,CAAYoB,MAAzB,oBAAgD,EAAhD,EAAoD;AACvEZ,cAAAA,OAAO,EAAE;AACL,kCAAkBa,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAhC,GAAgE,IAD7E;AAEL,gCAAgB;AAFX,eAD8D;AAKvEb,cAAAA,IAAI,EAAE;AALiE,aAApD,CADW;;AAAA;AAC5BC,YAAAA,QAD4B;AAAA,8CAS3BA,QAT2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBQ,sBAAsB;AAAA;AAAA;AAAA,GAA5B","sourcesContent":["import axios from 'axios';\n\nlet api = process.env.BASE_API_URL;\n\nexport const loginUser = async (pEmail, pPassword) => {\n    try {\n    const response = await axios.post(`${api}/v1/users/login`, {\n        email: pEmail,\n        password: pPassword\n    }, \n    {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n\n} catch (err) {\n    console.log(err);\n}\n};\n\nexport const registerUser = async (pEmail, pNickname, pUsername, pPassword) => {\n    const response = await axios.post(`${api}/v1/users/register`, {\n        email: pEmail,\n        password: pPassword,\n        username: pUsername,\n        nickname: pNickname,\n    }, {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        json: true\n    });\n\n    return response;\n\n};\n\nexport const getAllUsersFromMarqeta = async () => {\n    const response = await axios.get(`${process.env.apiUrl}/v1/mrq/users`, {}, {\n        headers: {\n            'x-access-token': localStorage.getItem('token') ? localStorage.getItem('token') : null,\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n}"]},"metadata":{},"sourceType":"module"}