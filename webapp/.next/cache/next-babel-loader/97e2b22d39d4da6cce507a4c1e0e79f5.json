{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = process.env.apiUrl;\nexport const loginUser = async (pEmail, pPassword) => {\n  const response = await axios.post('/v1/users/login', {\n    email: pEmail,\n    password: pPassword\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    json: true\n  }).catch(err => {\n    if (err.response.status == 400) {\n      return err.response;\n    }\n  });\n  return response;\n};\nexport const registerUser = async (pEmail, pNickname, pUsername, pPassword) => {\n  const response = await axios.post('/v1/users/register', {\n    email: pEmail,\n    password: pPassword,\n    username: pUsername,\n    nickname: pNickname\n  }, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    json: true\n  }).catch(err => {\n    if (err.response.status == 409) {\n      return err.response;\n    }\n  });\n  return response;\n};\nexport const getUserInformation = async () => {\n  const response = await axios.get('/v1/account/info', {\n    headers: {\n      'X-Access-Token': localStorage.getItem('token'),\n      'Content-Type': 'application/json'\n    },\n    json: true\n  });\n  return response;\n};\nexport const getAllUsersFromMarqeta = async () => {\n  const response = await axios.get('/v1/mrq/users', {\n    headers: {\n      'X-Access-Token': localStorage.getItem('token'),\n      'Content-Type': 'application/json'\n    },\n    json: true\n  });\n  return response;\n};","map":{"version":3,"sources":["/home/localuser/Devpost/spring_payments_marqeta/webapp/services/api.js"],"names":["axios","defaults","baseURL","process","env","apiUrl","loginUser","pEmail","pPassword","response","post","email","password","headers","json","catch","err","status","registerUser","pNickname","pUsername","username","nickname","getUserInformation","get","localStorage","getItem","getAllUsersFromMarqeta"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyBC,OAAO,CAACC,GAAR,CAAYC,MAArC;AAEA,OAAO,MAAMC,SAAS,GAAG,OAAOC,MAAP,EAAeC,SAAf,KAA6B;AAC9C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,iBAAX,EAA8B;AACjDC,IAAAA,KAAK,EAAEJ,MAD0C;AAEjDK,IAAAA,QAAQ,EAAEJ;AAFuC,GAA9B,EAIvB;AACIK,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADb;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAJuB,EASpBC,KAToB,CASbC,GAAD,IAAS;AACd,QAAIA,GAAG,CAACP,QAAJ,CAAaQ,MAAb,IAAuB,GAA3B,EAAgC;AAC5B,aAAOD,GAAG,CAACP,QAAX;AACH;AACJ,GAbsB,CAAvB;AAeA,SAAOA,QAAP;AACP,CAjBM;AAmBP,OAAO,MAAMS,YAAY,GAAG,OAAOX,MAAP,EAAeY,SAAf,EAA0BC,SAA1B,EAAqCZ,SAArC,KAAmD;AAC3E,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAW,oBAAX,EAAiC;AACpDC,IAAAA,KAAK,EAAEJ,MAD6C;AAEpDK,IAAAA,QAAQ,EAAEJ,SAF0C;AAGpDa,IAAAA,QAAQ,EAAED,SAH0C;AAIpDE,IAAAA,QAAQ,EAAEH;AAJ0C,GAAjC,EAKpB;AACCN,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KADV;AAICC,IAAAA,IAAI,EAAE;AAJP,GALoB,EAUpBC,KAVoB,CAUbC,GAAD,IAAS;AACd,QAAIA,GAAG,CAACP,QAAJ,CAAaQ,MAAb,IAAuB,GAA3B,EAAgC;AAC5B,aAAOD,GAAG,CAACP,QAAX;AACH;AACJ,GAdsB,CAAvB;AAiBA,SAAOA,QAAP;AACH,CAnBM;AAqBP,OAAO,MAAMc,kBAAkB,GAAG,YAAY;AAC1C,QAAMd,QAAQ,GAAG,MAAMT,KAAK,CAACwB,GAAN,CAAU,kBAAV,EAA8B;AACjDX,IAAAA,OAAO,EAAE;AACL,wBAAkBY,YAAY,CAACC,OAAb,CAAqB,OAArB,CADb;AAEL,sBAAgB;AAFX,KADwC;AAKjDZ,IAAAA,IAAI,EAAE;AAL2C,GAA9B,CAAvB;AAQA,SAAOL,QAAP;AACH,CAVM;AAYP,OAAO,MAAMkB,sBAAsB,GAAG,YAAY;AAC9C,QAAMlB,QAAQ,GAAG,MAAMT,KAAK,CAACwB,GAAN,CAAU,eAAV,EAA2B;AAC9CX,IAAAA,OAAO,EAAE;AACL,wBAAkBY,YAAY,CAACC,OAAb,CAAqB,OAArB,CADb;AAEL,sBAAgB;AAFX,KADqC;AAK9CZ,IAAAA,IAAI,EAAE;AALwC,GAA3B,CAAvB;AAQA,SAAOL,QAAP;AACH,CAVM","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = process.env.apiUrl;\n\nexport const loginUser = async (pEmail, pPassword) => {\n        const response = await axios.post('/v1/users/login', {\n            email: pEmail,\n            password: pPassword\n        }, \n        {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            json: true\n        }).catch((err) => {\n            if (err.response.status == 400) {\n                return err.response;\n            }\n        });\n\n        return response;\n};\n\nexport const registerUser = async (pEmail, pNickname, pUsername, pPassword) => {\n    const response = await axios.post('/v1/users/register', {\n        email: pEmail,\n        password: pPassword,\n        username: pUsername,\n        nickname: pNickname,\n    }, { \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        json: true\n    }).catch((err) => {\n        if (err.response.status == 409) {\n            return err.response;\n        }\n    });\n\n\n    return response;\n};\n\nexport const getUserInformation = async () => {\n    const response = await axios.get('/v1/account/info', {\n        headers: {\n            'X-Access-Token': localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n};\n\nexport const getAllUsersFromMarqeta = async () => {\n    const response = await axios.get('/v1/mrq/users', {\n        headers: {\n            'X-Access-Token': localStorage.getItem('token'),\n            'Content-Type': 'application/json'\n        },\n        json: true\n    });\n\n    return response;\n}"]},"metadata":{},"sourceType":"module"}