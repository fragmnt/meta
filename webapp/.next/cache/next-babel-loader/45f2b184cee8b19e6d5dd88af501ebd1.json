{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/localuser/.devpost/spring_payments_marqeta/webapp/pages/register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createRef, useState } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { loginUser } from '../services/api';\n\nfunction RegisterPage() {\n  _s();\n\n  var registrationForm = createRef();\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      pswd = _useState2[0],\n      setPswd = _useState2[1];\n\n  var handleEChange = function handleEChange(event) {\n    setEmail(event.target.value);\n  };\n\n  var handlePChange = function handlePChange(event) {\n    setPswd(event.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var resp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return loginUser(email, pswd);\n\n            case 3:\n              resp = _context.sent;\n\n              if (resp.status === 200 && resp.data.exists === true) {\n                localStorage.setItem('token', resp.data.accessToken); // alert(`Logging in ${resp.data.user.email}!`);\n\n                Router.push('/');\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"return to homepage\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Register an Account\"), __jsx(\"form\", {\n    ref: registrationForm,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"email\",\n    onChange: handleEChange,\n    value: email,\n    placeholder: \"create a email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    onChange: handlePChange,\n    value: pswd,\n    placeholder: \"create a password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"register your account\")));\n}\n\n_s(RegisterPage, \"2y59z5Tn7W54SQDm2l1FFRd/svU=\");\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/home/localuser/.devpost/spring_payments_marqeta/webapp/pages/register.js"],"names":["React","createRef","useState","Link","Router","loginUser","RegisterPage","registrationForm","email","setEmail","pswd","setPswd","handleEChange","event","target","value","handlePChange","handleSubmit","preventDefault","resp","status","data","exists","localStorage","setItem","accessToken","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,MAAIC,gBAAgB,GAAGN,SAAS,EAAhC;;AADoB,kBAGMC,QAAQ,CAAC,EAAD,CAHd;AAAA,MAGbM,KAHa;AAAA,MAGNC,QAHM;;AAAA,mBAIIP,QAAQ,CAAC,EAAD,CAJZ;AAAA,MAIbQ,IAJa;AAAA,MAIPC,OAJO;;AAMpB,MAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC3BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAIA,MAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAACH,KAAD,EAAW;AAC3BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,MAAIE,YAAY;AAAA,wEAAG,iBAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfA,cAAAA,KAAK,CAACK,cAAN;AADe;AAAA,qBAEEb,SAAS,CAACG,KAAD,EAAQE,IAAR,CAFX;;AAAA;AAEXS,cAAAA,IAFW;;AAIf,kBAAIA,IAAI,CAACC,MAAL,KAAgB,GAAhB,IAAuBD,IAAI,CAACE,IAAL,CAAUC,MAAV,KAAqB,IAAhD,EAAsD;AAElDC,gBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACE,IAAL,CAAUI,WAAxC,EAFkD,CAGlD;;AACArB,gBAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACH;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZT,YAAY;AAAA;AAAA;AAAA,KAAhB;;AAYA,SACI,4BACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAM,IAAA,GAAG,EAAEV,gBAAX;AAA6B,IAAA,QAAQ,EAAEU,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,QAAQ,EAAEL,aAA9B;AAA6C,IAAA,KAAK,EAAEJ,KAApD;AAA2D,IAAA,WAAW,EAAC,wBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAEQ,aAAjC;AAAgD,IAAA,KAAK,EAAEN,IAAvD;AAA6D,IAAA,WAAW,EAAC,mBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CAHJ,CADJ;AAWH;;GArCQJ,Y;;KAAAA,Y;AAuCT,eAAeA,YAAf","sourcesContent":["import React, {createRef, useState} from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport {loginUser} from '../services/api';\n\nfunction RegisterPage() {\n    let registrationForm = createRef();\n\n    const [email, setEmail] = useState(\"\");\n    const [pswd, setPswd] = useState(\"\");\n\n    let handleEChange = (event) => {\n        setEmail(event.target.value);\n    }\n\n    let handlePChange = (event) => {\n        setPswd(event.target.value);\n    }\n\n    let handleSubmit = async (event) => {\n        event.preventDefault();\n        var resp = await loginUser(email, pswd);\n        \n        if (resp.status === 200 && resp.data.exists === true) {\n\n            localStorage.setItem('token', resp.data.accessToken);\n            // alert(`Logging in ${resp.data.user.email}!`);\n            Router.push('/');\n        }\n    };\n\n    return (\n        <>\n            <Link href='/'>return to homepage</Link>\n            <h2>Register an Account</h2>\n            <form ref={registrationForm} onSubmit={handleSubmit}>\n                <input type='email' onChange={handleEChange} value={email} placeholder='create a email address' />\n                <input type='password' onChange={handlePChange} value={pswd} placeholder='create a password' />\n                <button>register your account</button>\n            </form>\n        </>\n    )\n}\n\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}